paths:
  /users/login:
    post:
      tags:
      - Login User
      summary: Logeo de usuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/LoginUser'
        required: true
      responses:
        200:
          description: Login OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Login/LoginOk'
        500: 
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/InternalServerError'
        401:
          description: No autorizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/Unauthorized'
  /api/products:
    get:
      tags:
      - Products
      summary: Lista de productos.
      responses:
        200: 
          description: Lista de productos.
          content:
            application/json:
              schema:
                type: array
                $ref: '#/components/schema/Products/GetAllProducts'      
        500: 
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/InternalServerError'        
    post:
      tags:
      - Products
      summary: Registro de producto.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/Products'
        required: true
      responses:
        200:
          description: Se registró el producto correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/Product'
        500: 
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/InternalServerError'
  /api/products/{pid}:
    get:
      tags:
      - Products
      summary: Busca producto por id.
      parameters:
        - in: path
          name: pid
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/Product'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
    put:
      tags:
      - Products
      summary: Editar producto.
      parameters:
        - in: path
          name: pid
          required: true
          description: id referente al producto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/Products'
        required: true
      responses:
        200:
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/Product'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
    delete:
      tags:
      - Products
      summary: Eliminar producto.
      parameters:
        - in: path
          name: pid
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Producto eliminado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Products/Product'
        404:
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
  /api/carts:
    get:
      tags:
      - Carts
      summary: Lista de carritos.
      responses:
        200: 
          description: Lista de carritos.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/GetAllCarts'      
        500: 
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/InternalServerError'        
    post:
      tags:
      - Carts
      summary: Registro de carrito.
      responses:
        200:
          description: Se registró el carrito correctamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        500: 
          description: Error del servidor.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/InternalServerError'
  /api/carts/product/{pid}: #Add product to cart
    post:
      tags:
      - Carts
      summary: Añadir producto a carrito de usuario logeado.
      parameters:
        - in: path
          name: pid
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Producto agregado a carrito.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        404:
          description: Carrito o Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
  /api/carts/{cid}:
    get:
      tags:
      - Carts
      summary: Busca cart por id y devuelve los productos que contiene.
      parameters:
        - in: path
          name: cid
          required: true
          description: id referente al carrito
          schema:
            type: string
      responses:
        200:
          description: Carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
    put:
      tags:
      - Carts
      summary: Editar Carrito. (Agregar listado de productos)
      parameters:
        - in: path
          name: cid
          required: true
          description: id referente al carrito
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/ProductsArray'
        required: true
      responses:
        200:
          description: Carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
    delete:
      tags:
      - Carts
      summary: Eliminar productos del carrito.
      parameters:
        - in: path
          name: cid
          required: true
          description: id referente al carrito
          schema:
            type: string
      responses:
        200:
          description: Carrito vaciado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
  /api/carts/{cid}/products/{pid}:
    delete:
      tags:
      - Carts
      summary: Eliminar producto deseado de
      
       carrito.
      parameters:
        - in: path
          name: cid
          required: true
          description: id referente al carrito
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: id referente al producto
          schema:
            type: string
      responses:
        200:
          description: Carrito modificado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
    put:
      tags:
      - Carts
      summary: Actualizar cantidad de Producto deseado en Carrito.
      parameters:
        - in: path
          name: cid
          required: true
          description: id referente al carrito
          schema:
            type: string
        - in: path
          name: pid
          required: true
          description: id referente al producto
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/ProductQuantity'
        required: true
      responses:
        200:
          description: Carrito encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Carts/Cart'
        404:
          description: Carrito no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schema/Errors/ErrorGetById'
